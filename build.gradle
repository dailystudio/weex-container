// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.71'
    ext.bintray_release_version = '0.9.2'

    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "com.novoda:bintray-release:$bintray_release_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


ext {
    // Jcenter publish credentials
    if (file("private.properties").exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("private.properties")))
        BINTRAY_KEY = props.getProperty('BINTRAY_KEY')
        BINTRAY_USER = props.getProperty('BINTRAY_USER')
    } else {
        BINTRAY_KEY = ""
        BINTRAY_USER = ""
    }

    // Compile Settings
    COMPILE_SDK = 30
    BUILD_TOOLS = '30.0.0'
    VERSION_NAME = version()
    VERSION_CODE = versionCode().toInteger()

    // Publishing Parameters
    SITE_URL = 'https://github.com/dailystudio/weex-container'
    GIT_URL = 'https://github.com/dailystudio/weex-container.git'
    GROUP_NAME = 'com.dailystudio'
    DESCRIPTION = 'Weex Container SDK for Android'
    DEVELOPER_ID = 'dailystudio'
    DEVELOPER_NAME = 'dailystudio'
    DEVELOPER_EMAIL = 'dailystudio2020@gmail.com'
    LICENCE_NAME  = 'The Apache Software License, Version 2.0'
    LICENCE_URL = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
}

def String version() {
    def versionPropsFile = file('version.properties')
    def Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))

    return versionProps['major'] + "." + versionProps['minor'] + "." + versionProps['patch']
}

def String versionCode() {
    def versionPropsFile = file('version.properties')
    def Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))

    return versionProps['code']
}
